// src/index.ts
import { build } from "esbuild";
import { builtinModules } from "module";
import path from "path";
import cpr from "cpr";
import { promisify } from "util";
import { fileURLToPath } from "url";
var dirname = path.dirname(fileURLToPath(import.meta.url));
async function bundle(options, manipulateEsbuildOptions) {
  const { input, output, staticDir } = options;
  const esbuildOptions = {
    logLevel: "info",
    bundle: true,
    minify: true,
    entryPoints: [input],
    outfile: output,
    platform: "node",
    target: "chrome96",
    format: "esm",
    mainFields: ["module", "main", "browser"],
    conditions: ["deno", "worker", "import", "require"],
    external: [...builtinModules, "https:*"],
    inject: [path.resolve(dirname, "../deno-env-shim.js")]
  };
  await (manipulateEsbuildOptions == null ? void 0 : manipulateEsbuildOptions(esbuildOptions));
  await build(esbuildOptions);
  if (staticDir) {
    await promisify(cpr)(staticDir, path.dirname(output) + "/public", {
      deleteFirst: true
    });
  }
}

export {
  bundle
};
